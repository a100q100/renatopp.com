{
  "games": {
    "democracy": {
      "name"         : "Democracy",
      "description"  : "This game was created to the 32th ludum dare with the theme \"unconventional weapon\". \"Democracy\" is my weapon of choice. As an unconventional weapon, the democracy and progress are used by the government to explore and subjugate other species. The game is highly influentiated by Heinlein’s novel – and, of course, the Verhoeven’s movie – Starship Troopers.",
      "technologies" : "JavaScript, CreateJS, Creatine, Behavior3JS, Behavior Trees, Hierarchical Behavior Trees",
      "site"         : "http://guineashots.com/democracy",
      "year"         : 2015,
      "featured"     : true,
      "thumbs"       : [
        "democracy-2.gif",
        "democracy-1.png",
        "democracy-3.gif",
        "democracy-4.png",
        "democracy-5.png",
        "democracy-6.png"
      ]
    },
    "baa-ram-ewe": {
      "name"         : "Baa Ram Ewe",
      "description"  : "35th best game, out of 2600+ - I made Baa Ram Ewe for the Ludum Dare 31 with the theme \"Entire Game on One Screen\". In this game, you must herd a group sheeps and move them from one place to another. The thing is, you can’t let the sheeps get out of the screen, nor to be drowned or hunted by the wolf.",
      "technologies" : "JavaScript, CreateJS, Creatine, StateJS, Finite State Machines, Boiding Algorithm",
      "site"         : "http://guineashots.com/baa-ram-ewe",
      "year"         : 2014,
      "featured"     : true,
      "thumbs"       : [
        "baaramewe-3.png",
        "baaramewe-2.png",
        "baaramewe-7.gif",
        "baaramewe-1.png",
        "baaramewe-4.png",
        "baaramewe-5.png",
        "baaramewe-6.png"
      ]
    },
    "love-craft": {
      "name"         : "Love Craft",
      "description"  : "Love Craft is my entry for Ludum Dare 30, which is based on the theme \"Connected Worlds\". Love Craft aims to connect worlds metaphorically: chibis walking in the park looking for their unknown loves while you protect them from obstacles. I’ve spent more than 20 hours developing a behavior tree framework and modeling the chibis behaviors. Because of this, I hadn’t time to make the game fun =C.",
      "technologies" : "JavaScript, CreateJS, Creatine, Behavior3JS, Behavior Trees",
      "site"         : "http://guineashots.com/beneath-the-sea",
      "year"         : 2014,
      "featured"     : false,
      "thumbs"       : [
        "lovecraft-6.png",
        "lovecraft-5.png",
        "lovecraft-4.png",
        "lovecraft-2.png",
        "lovecraft-1.png",
        "lovecraft-3.png"
      ]
    },
    "beneath-the-sea": {
      "name"         : "Beneath the Sea",
      "description"  : "Beneath The Sea is my game to Ludum Dare 29, which means that this game was built in less than 48 hours. Based on the theme \"Beneath The Surface\", in this game, you must defend the planet (or at least the “surface”) against the danger that comes from the deep sea. To perform this task, you control a battleship and must exterminate the summons of an ancient god as long as you can!",
      "technologies" : "JavaScript, CreateJS, Creatine",
      "site"         : "http://guineashots.com/beneath-the-sea",
      "year"         : 2014,
      "featured"     : false,
      "thumbs"       : [
        "beneath-4.png",
        "beneath-3.png",
        "beneath-2.png",
        "beneath-5.png"
      ]
    }
  },

  "projects": {
    "behavrio3editor": {
      "name"         : "Behavior3",
      "description"  : "The Behavior3 framework provides a set of tools and open specifications for you to create, design and use Behavior Trees for games, simulation, robotics and any other agent-based applications. Behavior3 Editor is open-source under MIT license, does not depends on proprietary tools and can be easily extended. Behavior3 libraries follows a simple yet powerful architecture upon a formal and consistent basis, optimized to control multiple agents. Behavior3 uses an open and simple format to describe the behavior trees, thus you can adapt easily to your own library, tool or framework.",
      "technologies" : "JavaScript, AngularJS, CreateJS, Creatine, Python",
      "site"         : "http://behavior3.com/editor",
      "year"         : 2014,
      "featured"     : true,
      "thumbs"       : [
        "behavior3editor-4.png",
        "behavior3editor-1.png",
        "behavior3editor-2.png",
        "behavior3editor-3.png",
        "behavior3editor-5.png",
        "behavior3editor-6.png"
      ]
    },
    "statejs": {
      "name"         : "StateJS",
      "description"  : "StateJS is a Javascript library that provides state-based models such as Finite State Machines and the Subsumption architecture. It aims speed, low memory consuption and multi-agent control.",
      "technologies" : "JavaScript",
      "site"         : "http://statejs.guineashots.com/",
      "year"         : 2014,
      "featured"     : false,
      "thumbs"       : [
        "statejs.png"
      ]
    },
    "creatine": {
      "name"         : "Creatine",
      "description"  : "Creatine is a toolbox that provides algorithms and data structures for game development, complementing CreateJS. Creatine provides layout management, scene management, tile maps, entity-component-systems, and other features to handle sound, devices and resources. It is built in Javascript.",
      "technologies" : "JavaScript, HTML5, Canvas",
      "site"         : "http://creatine.guineashots.com",
      "year"         : 2014,
      "featured"     : false,
      "thumbs"       : [
        "creatine-6.png",
        "creatine-2.png",
        "creatine-1.png",
        "creatine-3.png",
        "creatine-4.png",
        "creatine-5.png",
        "creatine-7.png"
      ]
    },
    "liac-chess": {
      "name"         : "Liac Chess",
      "description"  : "Liac Chess was developed to be used in didactic activities for artificial intelligence classes. The goal of Liac Chess is to provide a graphical interface for chess games, which includes its variants such as the Pawn Battle, so the students can focus on learning and developing the class algorithms. Liac Chess is implemented in Python using WxPython.",
      "technologies" : "Python, WxPython, Sockets",
      "site"         : "https://github.com/renatopp/liac-chess",
      "year"         : 2014,
      "featured"     : false,
      "thumbs"       : [
        "liac-chess.png"
      ]
    },
    "psi-robotics": {
      "name"         : "Psi Robotics",
      "description"  : "An environment to create component-based algorithm for robotics. Psi Robotics were created to handle modular algorithms and facilitating experiments on different types of robots. It was made in Python using WxPython and OpenGL.",
      "technologies" : "Python, WxPython, OpenGL",
      "site"         : "https://github.com/renatopp/psi-robotics",
      "year"         : 2013,
      "featured"     : false,
      "thumbs"       : [
        "psi.png"
      ]
    },
    "aerolito": {
      "name"         : "Aerolito",
      "description"  : "Aerolito is toy markup language to simulate natural language processing. It was planned to be an alternative to AIML and RiveScript. Aerolito is built in Python and uses datasets based on YAML and regex to compile and test entries.",
      "technologies" : "Python",
      "site"         : "https://github.com/renatopp/aerolito",
      "year"         : 2011,
      "featured"     : false,
      "thumbs"       : [
        "aerolito.jpg"
      ]
    }
  },

  "others": {
    "liac-arff": {
      "name"         : "liac-arff",
      "description"  : "A library for read and write ARFF files in Python.",
      "technologies" : "Python",
      "site"         : "https://github.com/renatopp/liac-arff"
    },
    "vindinium-python": {
      "name"         : "vindinium-python",
      "description"  : "A complete python client for vindinium game.",
      "technologies" : "Python, Minimax, A*",
      "site"         : "https://github.com/renatopp/vindinium-python"
    },
    "marioai": {
      "name"         : "marioai",
      "description"  : "Fork of the 2009 MarioAI code plus some additions to the Python client.",
      "technologies" : "Python",
      "site"         : "https://github.com/renatopp/marioai"
    },
    "inf-seal": {
      "name"         : "inf-seal",
      "description"  : "Bot winner of the demolition derby competition",
      "technologies" : "Java, Fuzzy, Finite State Machines",
      "site"         : "https://github.com/renatopp/inf-seal"
    },
    "pgnparser": {
      "name"         : "pgnparser",
      "description"  : "A simple python PGN parser.",
      "technologies" : "Python",
      "site"         : "https://github.com/renatopp/pgnparser"
    },
    "ratslam-python": {
      "name"         : "ratslam-python",
      "description"  : "A fully working implementation of RATSLAM in Python, using OpenCV.",
      "technologies" : "Python",
      "site"         : "https://github.com/renatopp/ratslam-python"
    },
    "mywiki": {
      "name"         : "Personal wiki",
      "description"  : "My Personal Wiki using static reStructureText and Markdown files.",
      "technologies" : "Python, Flask",
      "site"         : "https://github.com/renatopp/mywiki"
    },
    "batma": {
      "name"         : "Batma",
      "description"  : "Batma 2D python game engine, based on PyGame.",
      "technologies" : "Python, PyGame",
      "site"         : "https://github.com/renatopp/batma"
    },
    "demolitionderby-python": {
      "name"         : "demolitionderby-python",
      "description"  : "Demolition Derby Python Client.",
      "technologies" : "Python",
      "site"         : "https://github.com/renatopp/demolitionderby-python"
    },
    "jcomicbook": {
      "name"         : "JComicBook",
      "description"  : "A jQuery plugin for comicbook reading",
      "technologies" : "JavaScript, jQuery",
      "site"         : "https://github.com/renatopp/jcomicbook"
    },
    "pyramidblog": {
      "name"         : "PyramidBlog",
      "description"  : "My old blog made with Pyramid.",
      "technologies" : "Python, Pyramid",
      "site"         : "https://github.com/renatopp/pyramid-blog"
    },
    "dojo2py": {
      "name"         : "Dojo2py",
      "description"  : "Dojo2py is a realtime, multiuser tool for online coding dojos, using twisted, websockets and ACE editor.",
      "technologies" : "Python, Flask, Twisted",
      "site"         : "https://github.com/renatopp/dojo2py"
    }
  }
}